<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage />
	<TimerPackage />
	<AliasPackage />
	<ActionPackage />
	<ScriptPackage>
		<Script isActive="yes" isFolder="no">
			<name>init</name>
			<packageName></packageName>
			<script>--[[

  ██████╗███╗   ██╗██╗             ██████╗ ██████╗ 
 ██╔════╝████╗  ██║██║             ██╔══██╗██╔══██╗
 ██║     ██╔██╗ ██║██║             ██║  ██║██████╔╝
 ██║     ██║╚██╗██║██║             ██║  ██║██╔══██╗
 ╚██████╗██║ ╚████║███████╗███████╗██████╔╝██████╔╝
  ╚═════╝╚═╝  ╚═══╝╚══════╝╚══════╝╚═════╝ ╚═════╝   

               '; drop all tables; --

]]

-- Init ------------------------------------------------------------------------
cnl_db                  = cnl_db or {}
cnl_db.data             = cnl_db.data or {}

-- Const -------------------------------
cnl_db.VER              = "2023.6.26"    
cnl_db.PKG              = "cnl_db"      

-- Database ----------------------------
cnl_db.db               = db:create(cnl_db.PKG,{})
</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>util</name>
			<packageName></packageName>
			<script>u = u or {}

function u.getModPath(mod)
  if getModulePath(mod) then
    return getModulePath(mod):gsub("/[^/]+$","").."/"
  else
    return getMudletHomeDir().."/"
  end
end

function u.loadTable(path,obj,echo)
  echo = echo == nil or echo -- default is to echo
  if io.exists(path) then
    table.load(path, obj)
    if echo then
      cecho("💾&lt;green&gt;🠊&lt;reset&gt; "..path.." (read)\n")
    end
  else
    if echo then
      cecho("💾&lt;gray&gt;?&lt;reset&gt; "..path.." (not found)\n")
    end
  end
end

function u.saveTable(path,obj,echo)
  echo = echo == nil or echo -- default is to echo
  table.save(path,obj)
  if echo then 
    cecho("💾&lt;red&gt;🠈&lt;reset&gt; "..path.." (save)\n")
  end
end

</script>
			<eventHandlerList />
		</Script>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>item</name>
			<packageName></packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>_table</name>
				<packageName></packageName>
				<script>-- item table
db:create(cnl_db.db._db_name,{item={
    vnum="",
    name="",
    type="",
    keyword="",
    _unique={"vnum"},
    _index={"name"},
    _violations = "REPLACE"
}})

</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>itemUpdate</name>
				<packageName></packageName>
				<script>local URL = "http://eq.slothmud.org/?level_wa=&amp;level_th=&amp;level_ma=&amp;level_cl=&amp;level_dr=&amp;level_mo=&amp;level_ba=&amp;level_ne=&amp;level_av=&amp;search=%" 

function cnl_db.itemUpdate()
  cecho("Downloading full eqlist and loading into database.\n")
  getHTTP(URL)
end

function cnl_db.downloadEQListHandler(evt,url,body)
  if url == URL then cecho("MATCH!!!") end
  cecho("EQ list downloaded.\n")
  cecho("Parsing...\n")
  
  local body_split = body:split([[&lt;div class="item"&gt;]])
  local items = {}
  local mydb = cnl_db.db
  mydb:_begin()
  for _,text in pairs(body_split) do
    local _,_,vnum = rex.find(text,"VNUM: ([\\d]+)")
    if vnum then
      local _,_,name    = rex.find(text,"VNUM:\\s+\\d+\"&gt;([^&lt;]+)")
      local _,_,type    = rex.find(text,"type\"&gt;\\[([^\\]]+)\\]")
      local _,_,keyword = rex.find(text,"keywords\"&gt;([^&lt;]+)")
      local item = {}
      items[vnum]   = item
      item.name     = name
      item.type     = type
      item.keyword  = keyword
      db:add(mydb.item,{vnum=tonumber(vnum), name=name, type=type, keyword=keyword})
    end
  end
  mydb:_commit()
  cecho("done.\n")
end
cnl_db.downloadEQListHandlerId = cnl_db.downloadEQListHandlerId or 
  registerAnonymousEventHandler([[sysGetHttpDone]],[[cnl_db.downloadEQListHandler]])


function cnl_db.downloadEQListErrorHandler(evt,url,body)
  if url == URL then cecho("MATCH!!!") end
  cecho("Error downloading EQ List.\n")
end
cnl_db.downloadEQListErrorHandlerId = cnl_db.downloadEQListErrorHandlerId or 
  registerAnonymousEventHandler([[sysGetHttpError]],[[cnl_db.downloadEQListErrorHandler]])
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>itemGet</name>
				<packageName></packageName>
				<script>function cnl_db.itemGet(name)
  return db:fetch(cnl_db.db.item, db:like(cnl_db.db.item.name, name))
end</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
	</ScriptPackage>
	<KeyPackage />
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
